import typing

import typing_extensions
from flytekit.core.annotation import FlyteAnnotation
from latch.executions import report_nextflow_used_storage
from latch.ldata.path import LPath
from latch.resources.launch_plan import LaunchPlan
from latch.resources.tasks import custom_task, nextflow_runtime_task
from latch.resources.workflow import workflow
from latch.types import metadata
from latch.types.directory import LatchDir, LatchOutputDir
from latch.types.file import LatchFile

from wf.entrypoint import Reference, SampleSheet, initialize, nextflow_runtime


@workflow(metadata._nextflow_metadata)
def nf_nf_core_cutandrun(
    input: typing.List[SampleSheet],
    outdir: LatchOutputDir,
    multiqc_title: typing.Optional[str],
    save_reference: bool,
    save_merged_fastq: bool,
    save_trimmed: bool,
    save_spikein_aligned: bool,
    save_unaligned: bool,
    save_align_intermed: bool,
    email: typing.Optional[str],
    dump_scale_factors: bool,
    genome_source: str,
    genome: typing.Optional[str],
    latch_genome: typing.Optional[Reference],
    bowtie2: typing.Optional[LatchDir],
    gtf: typing.Optional[LatchFile],
    gene_bed: typing.Optional[LatchFile],
    blacklist: typing.Optional[LatchFile],
    spikein_bowtie2: typing.Optional[LatchFile],
    spikein_fasta: typing.Optional[LatchFile],
    fasta: typing.Optional[LatchFile],
    only_input: bool,
    only_genome: bool,
    only_preqc: bool,
    only_alignment: bool,
    only_filtering: bool,
    only_peak_calling: bool,
    skip_fastqc: bool,
    skip_trimming: bool,
    skip_removeduplicates: bool,
    skip_reporting: bool,
    skip_preseq: bool,
    skip_igv: bool,
    skip_dt_qc: bool,
    skip_heatmaps: bool,
    skip_peak_qc: bool,
    skip_multiqc: bool,
    remove_mitochondrial_reads: bool,
    run_name: str,
    mito_name: typing.Optional[str],
    dedup_target_reads: bool,
    remove_linear_duplicates: bool,
    macs2_pvalue: typing.Optional[float],
    singularity_pull_docker_container: bool,
    multiqc_methods_description: typing.Optional[str],
    spikein_genome: typing.Optional[str] = "K12-MG1655",
    clip_r1: typing.Optional[int] = 0,
    clip_r2: typing.Optional[int] = 0,
    three_prime_clip_r1: typing.Optional[int] = 0,
    three_prime_clip_r2: typing.Optional[int] = 0,
    trim_nextseq: typing.Optional[int] = 0,
    minimum_alignment_q_score: typing.Optional[int] = 20,
    end_to_end: bool = True,
    normalisation_mode: typing.Optional[str] = "Spikein",
    normalisation_binsize: typing.Optional[int] = 50,
    peakcaller: typing.Optional[str] = "seacr",
    use_control: bool = True,
    extend_fragments: bool = True,
    igg_scale_factor: typing.Optional[float] = 0.5,
    seacr_peak_threshold: typing.Optional[float] = 0.05,
    seacr_norm: typing.Optional[str] = "non",
    seacr_stringent: typing.Optional[str] = "stringent",
    macs2_qvalue: typing.Optional[float] = 0.01,
    macs_gsize: typing.Optional[float] = 2700000000.0,
    macs2_narrow_peak: bool = True,
    macs2_broad_cutoff: typing.Optional[float] = 0.1,
    consensus_peak_mode: typing.Optional[str] = "group",
    replicate_threshold: typing.Optional[float] = 1.0,
    igv_show_gene_names: bool = True,
    dt_qc_bam_binsize: typing.Optional[int] = 500,
    dt_qc_corr_method: typing.Optional[str] = "pearson",
    dt_heatmap_gene_beforelen: typing.Optional[int] = 3000,
    dt_heatmap_gene_bodylen: typing.Optional[int] = 5000,
    dt_heatmap_gene_afterlen: typing.Optional[int] = 3000,
    dt_heatmap_peak_beforelen: typing.Optional[int] = 3000,
    dt_heatmap_peak_afterlen: typing.Optional[int] = 3000,
    dt_calc_all_matrix: bool = True,
    min_frip_overlap: typing.Optional[float] = 0.2,
    min_peak_overlap: typing.Optional[float] = 0.2,
    igv_sort_by_groups: bool = True,
) -> None:
    """
    nf-core/cutandrun

    Sample Description
    """

    pvc_name: str = initialize()
    nextflow_runtime(
        pvc_name=pvc_name,
        input=input,
        outdir=outdir,
        multiqc_title=multiqc_title,
        save_reference=save_reference,
        save_merged_fastq=save_merged_fastq,
        save_trimmed=save_trimmed,
        save_spikein_aligned=save_spikein_aligned,
        save_unaligned=save_unaligned,
        save_align_intermed=save_align_intermed,
        email=email,
        dump_scale_factors=dump_scale_factors,
        genome=genome,
        genome_source=genome_source,
        latch_genome=latch_genome,
        bowtie2=bowtie2,
        gtf=gtf,
        gene_bed=gene_bed,
        blacklist=blacklist,
        spikein_genome=spikein_genome,
        spikein_bowtie2=spikein_bowtie2,
        spikein_fasta=spikein_fasta,
        fasta=fasta,
        only_input=only_input,
        only_genome=only_genome,
        only_preqc=only_preqc,
        only_alignment=only_alignment,
        only_filtering=only_filtering,
        only_peak_calling=only_peak_calling,
        skip_fastqc=skip_fastqc,
        skip_trimming=skip_trimming,
        skip_removeduplicates=skip_removeduplicates,
        skip_reporting=skip_reporting,
        skip_preseq=skip_preseq,
        skip_igv=skip_igv,
        skip_dt_qc=skip_dt_qc,
        skip_heatmaps=skip_heatmaps,
        skip_peak_qc=skip_peak_qc,
        skip_multiqc=skip_multiqc,
        clip_r1=clip_r1,
        clip_r2=clip_r2,
        three_prime_clip_r1=three_prime_clip_r1,
        three_prime_clip_r2=three_prime_clip_r2,
        trim_nextseq=trim_nextseq,
        minimum_alignment_q_score=minimum_alignment_q_score,
        remove_mitochondrial_reads=remove_mitochondrial_reads,
        run_name=run_name,
        mito_name=mito_name,
        dedup_target_reads=dedup_target_reads,
        remove_linear_duplicates=remove_linear_duplicates,
        end_to_end=end_to_end,
        normalisation_mode=normalisation_mode,
        normalisation_binsize=normalisation_binsize,
        peakcaller=peakcaller,
        use_control=use_control,
        extend_fragments=extend_fragments,
        igg_scale_factor=igg_scale_factor,
        seacr_peak_threshold=seacr_peak_threshold,
        seacr_norm=seacr_norm,
        seacr_stringent=seacr_stringent,
        macs2_qvalue=macs2_qvalue,
        macs2_pvalue=macs2_pvalue,
        macs_gsize=macs_gsize,
        macs2_narrow_peak=macs2_narrow_peak,
        macs2_broad_cutoff=macs2_broad_cutoff,
        consensus_peak_mode=consensus_peak_mode,
        replicate_threshold=replicate_threshold,
        igv_show_gene_names=igv_show_gene_names,
        dt_qc_bam_binsize=dt_qc_bam_binsize,
        dt_qc_corr_method=dt_qc_corr_method,
        dt_heatmap_gene_beforelen=dt_heatmap_gene_beforelen,
        dt_heatmap_gene_bodylen=dt_heatmap_gene_bodylen,
        dt_heatmap_gene_afterlen=dt_heatmap_gene_afterlen,
        dt_heatmap_peak_beforelen=dt_heatmap_peak_beforelen,
        dt_heatmap_peak_afterlen=dt_heatmap_peak_afterlen,
        dt_calc_all_matrix=dt_calc_all_matrix,
        min_frip_overlap=min_frip_overlap,
        min_peak_overlap=min_peak_overlap,
        igv_sort_by_groups=igv_sort_by_groups,
        singularity_pull_docker_container=singularity_pull_docker_container,
        multiqc_methods_description=multiqc_methods_description,
    )


LaunchPlan(
    nf_nf_core_cutandrun,
    "Test Data",
    {
        "input": [
            SampleSheet(
                group="h3k27me3",
                replicate=1,
                fastq_1=LatchFile("s3://latch-public/test-data/35729/cutandrun/test_data/h3k27me3_rep1_r1.fastq.gz"),
                fastq_2=LatchFile("s3://latch-public/test-data/35729/cutandrun/test_data/h3k27me3_rep1_r2.fastq.gz"),
                control="igg",
            ),
            SampleSheet(
                group="h3k27me3",
                replicate=2,
                fastq_1=LatchFile("s3://latch-public/test-data/35729/cutandrun/test_data/h3k27me3_rep2_r1.fastq.gz"),
                fastq_2=LatchFile("s3://latch-public/test-data/35729/cutandrun/test_data/h3k27me3_rep2_r2.fastq.gz"),
                control="igg",
            ),
            SampleSheet(
                group="h3k4me3",
                replicate=1,
                fastq_1=LatchFile("s3://latch-public/test-data/35729/cutandrun/test_data/h3k4me3_rep1_r1.fastq.gz"),
                fastq_2=LatchFile("s3://latch-public/test-data/35729/cutandrun/test_data/h3k4me3_rep1_r2.fastq.gz"),
                control="igg",
            ),
            SampleSheet(
                group="h3k4me3",
                replicate=2,
                fastq_1=LatchFile("s3://latch-public/test-data/35729/cutandrun/test_data/h3k4me3_rep2_r1.fastq.gz"),
                fastq_2=LatchFile("s3://latch-public/test-data/35729/cutandrun/test_data/h3k4me3_rep2_r2.fastq.gz"),
                control="igg",
            ),
            SampleSheet(
                group="igg",
                replicate=1,
                fastq_1=LatchFile("s3://latch-public/test-data/35729/cutandrun/test_data/igg_rep1_r1.fastq.gz"),
                fastq_2=LatchFile("s3://latch-public/test-data/35729/cutandrun/test_data/igg_rep1_r2.fastq.gz"),
                control="",
            ),
            SampleSheet(
                group="igg",
                replicate=2,
                fastq_1=LatchFile("s3://latch-public/test-data/35729/cutandrun/test_data/igg_rep2_r1.fastq.gz"),
                fastq_2=LatchFile("s3://latch-public/test-data/35729/cutandrun/test_data/igg_rep2_r2.fastq.gz"),
                control="",
            ),
        ],
        "blacklist": LatchFile("s3://latch-public/test-data/35729/cutandrun/hg38-blacklist.bed"),
        "spikein_bowtie2": LatchFile("s3://latch-public/test-data/35729/cutandrun/e_coli_U00096_3.tar.gz"),
        "spikein_fasta": LatchFile("s3://latch-public/test-data/35729/cutandrun/e_coli_U00096_3.fa"),
        "fasta": LatchFile("s3://latch-public/test-data/35729/cutandrun/hg38-chr20.fa"),
        "bowtie2": LatchDir("s3://latch-public/test-data/35729/cutandrun/hg38-chr20-bowtie2/"),
        "gtf": LatchFile("s3://latch-public/test-data/35729/cutandrun/hg38-chr20-genes.gtf"),
        "gene_bed": LatchFile("s3://latch-public/test-data/35729/cutandrun/hg38-chr20-genes.bed"),
        "run_name": "test-run",
        "outdir": LatchOutputDir("latch:///cutandrun_test/"),
        "peakcaller": "seacr",
        "mito_name": "chrM",
        "remove_linear_duplicates": True,
        "remove_mitochondrial_reads": True,
    },
)
